trigger:
  branches:
    include:
    - master
    - 202???
    - 201???

pr:
  branches:
    include:
    - master
    - 202???
    - 201???

variables:
  - name: BUILD_BRANCH
    ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
      value: $(System.PullRequest.TargetBranch)
    ${{ else }}:
      value: $(Build.SourceBranchName)

resources:
  repositories:
  - repository: sonic-swss-common
    type: github
    name: sonic-net/sonic-swss-common
    endpoint: sonic-net
    ref: refs/heads/$(BUILD_BRANCH)

parameters:
- name: arch
  type: string
  values:
  - amd64
  default: amd64

- name: pool
  type: string
  values:
  - sonicbld
  - default
  default: default

- name: timeout
  type: number
  default: 60

- name: sonic_slave
  type: string
  default: sonic-slave-bullseye

schedules:
- cron: "0 0 * * *"
  displayName: Daily
  always: true
  branches:
    include:
    - master

jobs:
- job: build
  timeoutInMinutes: 240
  pool:
    vmImage: 'ubuntu-20.04'
  container:
    image: sonicdev-microsoft.azurecr.io:443/sonic-slave-bookworm:latest


  steps:
    - checkout: sonic-swss-common
      clean: true
      submodules: recursive
      displayName: 'Checkout sonic-swss-common'

    - task: DownloadPipelineArtifact@2
      inputs:
        source: specific
        project: build
        pipeline: 142
        artifact: sonic-buildimage.vs
        runVersion: 'latestFromBranch'
        runBranch: 'refs/heads/$(BUILD_BRANCH)'
        patterns: |
            target/debs/bookworm/libyang*.deb
            target/debs/bookworm/libnl*.deb
            target/debs/bookworm/libswsscommon*.deb
            target/debs/bookworm/python3-swsscommon*.deb
      displayName: "Download bookworm debs"

    - script: |
        # LIBSWSSCOMMON
        sudo apt-get -y purge libnl-3-dev libnl-route-3-dev
        sudo dpkg -i ../target/debs/bookworm/libnl-3-200_*.deb
        sudo dpkg -i ../target/debs/bookworm/libnl-genl-3-200_*.deb
        sudo dpkg -i ../target/debs/bookworm/libnl-route-3-200_*.deb
        sudo dpkg -i ../target/debs/bookworm/libnl-nf-3-200_*.deb
      displayName: "Install libswsscommon dependencies"

    - script: |
        # LIBSWSSCOMMON
        sudo dpkg -i ../target/debs/bookworm/libyang*1.0.73*.deb
        sudo dpkg -i ../target/debs/bookworm/libswsscommon_1.0.0_amd64.deb
        sudo dpkg -i ../target/debs/bookworm/libswsscommon-dev_1.0.0_amd64.deb
        sudo dpkg -i ../target/debs/bookworm/python3-swsscommon_1.0.0_amd64.deb
      displayName: 'Install libswsscommon package'

    - script: |
        set -ex
        sudo apt-get update
        sudo apt-get install -y gcc g++ libboost-dev cmake zlib1g-dev libsasl2-2 libsasl2-dev
        sudo apt-get remove -y libcurl4-openssl-dev

        git clone https://github.com/jbeder/yaml-cpp.git
        pushd yaml-cpp
        mkdir build
        pushd build
        cmake -DBUILD_SHARED_LIBS=OFF ..
        make
        sudo make install
        popd
        popd

        git clone https://github.com/edenhill/librdkafka.git
        pushd librdkafka
        ./configure
        make
        sudo make install
        popd

        # Sanity check
        mkdir original_bmp
        pushd original_bmp
        git clone https://github.com/sonic-net/sonic-bmp.git
        pushd sonic-bmp
        git checkout $(BUILD_BRANCH)
        mkdir build
        pushd build
        cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ../
        make
        popd
        popd
        popd

        # sonic option
        mkdir sonic_bmp
        pushd sonic_bmp
        git clone https://github.com/sonic-net/sonic-bmp.git
        pushd sonic-bmp
        git checkout $(BUILD_BRANCH)
        mkdir build
        pushd build
        cmake -DENABLE_REDIS=ON -DCMAKE_INSTALL_PREFIX:PATH=/usr ../
        make
        popd
        popd
        popd

    - publish: $(System.DefaultWorkingDirectory)/
      artifact: sonic-bmp.amd64.ubuntu20_04
      displayName: "Archive sonic-bmp packages"

